{"version":3,"sources":["Components/QuestionButton.js","Components/Settings.js","Components/VideoQuestion.tsx","Components/Question.tsx","Components/FinalScreen.js","Components/Menu/FormModal.tsx","Components/Menu/Options.tsx","App.js","store/Reducer.tsx","index.js"],"names":["QuestionButton","props","questionCategory","useSelector","state","options","question_category","questionType","question_type","questionAmount","amount_of_questions","questionIndex","index","dispatch","useDispatch","onClick","type","score","questionSet","Object","values","questionArray","filter","val","i","category","shuffled","map","value","sort","Math","random","a","b","questions","text","Settings","className","onChange","event","target","min","videoElement","App","isAnswered","question","video_id","youtube_id","stopTime","stop","useEffect","seekTo","playVideo","videoId","opts","playerVars","autoplay","modestbranding","controls","disablekb","onReady","interval","setInterval","getCurrentTime","elapsed_seconds","done","playerInfo","playerState","pauseVideo","clearInterval","console","log","questionInterval","onStateChange","answered","Question","useState","selectedAnswer","setSelectedAnswer","answerSelected","answers","answer","correct_answer","handleListItemClick","textContent","length","setTimeout","getClass","option","FinalScreen","FinalScore","round","FormModal","types","questionTypes","questionCategories","React","open","setOpen","formData","difficulty","responseBody","setResponseBody","FormClose","setOpened","inputChangeHandler","name","Dialog","onClose","DialogTitle","align","sx","DialogContent","DialogContentText","marginBottom","TextField","e","required","autoFocus","margin","id","select","label","helperText","MenuItem","fullWidth","variant","DialogActions","Button","answersArr","push","match","fetch","method","headers","body","JSON","stringify","then","res","ok","data","catch","error","StyledMenu","styled","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","marginTop","spacing","minWidth","color","palette","mode","grey","boxShadow","padding","fontSize","secondary","marginRight","backgroundColor","alpha","primary","main","action","selectedOpacity","OptionsMenu","anchorEl","setAnchorEl","opened","Boolean","handleClose","innerText","aria-controls","undefined","aria-haspopup","aria-expanded","disableElevation","currentTarget","endIcon","MenuListProps","disableRipple","component","darkTheme","createTheme","ThemeProvider","src","initState","loading","question_difficulty","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b56b4ee2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport questionArray from '../json/questions.json'\r\n\r\nfunction QuestionButton(props) {\r\n  /* State Declarations */\r\n  const questionCategory = useSelector((state) => state.options.question_category)\r\n  const questionType = useSelector((state) => state.options.question_type)\r\n  const questionAmount = useSelector((state) => state.options.amount_of_questions)\r\n  const questionIndex = useSelector((state) => state.index)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  // const handleQuery = async () => {\r\n  //   let apiUrl = `https://opentdb.com/api.php?amount=${questionAmount}`\r\n\r\n    \r\n\r\n  //   if (questionType.length) {\r\n  //     apiUrl = apiUrl.concat(`&type=${questionType}`)\r\n  //   }\r\n\r\n  //   await fetch(apiUrl)\r\n  //     .then((res) => res.json())\r\n  //     .then((response) => {\r\n  //       setQuestions(response.results)\r\n  //     })\r\n\r\n  //   if (questionIndex > 0) {\r\n  //     dispatch({\r\n  //       type: 'SET_INDEX',\r\n  //       index: 0,\r\n  //     })\r\n\r\n  //     dispatch({\r\n  //       type: 'SET_SCORE',\r\n  //       score: 0,\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n\r\nconst populateQuestions = () => {\r\n  /* Reset score/questions from previous game */\r\n  if (questionIndex > 0) {\r\n        dispatch({\r\n          type: 'SET_INDEX',\r\n          index: 0,\r\n        })\r\n  \r\n        dispatch({\r\n          type: 'SET_SCORE',\r\n          score: 0,\r\n        })\r\n}\r\n\r\n/* parse questions from JSON into new object array, validate input for category, type, etc. */\r\nlet questionSet = Object.values(questionArray).filter((val, i)=> {\r\n  if (questionType == \"All\" && questionCategory == \"All\") {return true}\r\n  else if (questionType == \"All\") {return val.category == questionCategory}\r\n  else if (questionCategory == \"All\") {return val.type == questionType}\r\n  else {return val.type == questionType && val.category == questionCategory}\r\n}\r\n);\r\n\r\n/* Randomize Question Array */\r\nlet shuffled = questionSet\r\n    .map(value => ({ value, sort: Math.random() }))\r\n    .sort((a, b) => a.sort - b.sort)\r\n    .map(({ value }) => value)\r\n\r\n/* Filter Randomized Selection by Number of Questions Selected */\r\nquestionSet = shuffled.filter((val, i)=> i <= questionAmount - 1)\r\n\r\ndispatch ({\r\n  type: 'SET_QUESTIONS', \r\n  questions: questionSet\r\n})\r\n\r\n\r\n}\r\n\r\n  return <button onClick={populateQuestions}>{props.text}</button>\r\n}\r\nexport default QuestionButton\r\n","import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport QuestionButton from './QuestionButton'\r\n\r\nfunction Settings () {\r\n    const questionCategory = useSelector((state) => state.options.question_category)\r\n    const questionType = useSelector((state) => state.options.question_type)\r\n    const questionAmount = useSelector((state) => state.options.amount_of_questions)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    /* Selection Handlers*/\r\n    const handleGameTypeChange = event => {\r\n      dispatch({\r\n        type: 'CHANGE_TYPE',\r\n        value: event.target.value\r\n      })\r\n    }\r\n\r\n    const handleQuestionNumChange = event => {\r\n      dispatch({\r\n        type: 'CHANGE_AMOUNT',\r\n        value: event.target.value\r\n      })\r\n    }\r\n\r\n        return (\r\n            <div className='options'>\r\n              <div>\r\n                <h2>Select Game Type:</h2>\r\n                <select onChange={handleGameTypeChange}>\r\n                  <option>Multiple Choice</option>\r\n                  <option>True/False</option>\r\n                  <option>Guess That Player</option>\r\n                  <option>All</option>\r\n                </select>\r\n              </div>\r\n              {/* <div>\r\n                <h2>Select Difficulty:</h2>\r\n                <select value={questionDifficulty} onChange={handleDifficultyChange}>\r\n                  <option value=\"\" key=\"difficulty-0\">All</option>\r\n                  <option value=\"easy\" key=\"difficulty-1\">Easy</option>\r\n                  <option value=\"medium\" key=\"difficulty-2\">Medium</option>\r\n                  <option value=\"hard\" key=\"difficulty-3\">Hard</option>\r\n                </select>\r\n              </div> */}\r\n                <div>\r\n                <h2>Number of Questions:</h2>\r\n                <input type=\"number\" min=\"0\" onChange={handleQuestionNumChange} />\r\n              </div>\r\n\r\n              <QuestionButton text=\"Show Me Your Moves!\"/>\r\n\r\n            </div>\r\n\r\n          )\r\n\r\n\r\n}\r\n\r\nexport default Settings","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport YouTube, {YouTubePlayer} from 'react-youtube'\r\n\r\nlet videoElement: YouTubePlayer = null;\r\n\r\nexport default function App() {\r\n  const questions = useSelector((state: any) => state.questions)\r\n  const questionIndex = useSelector((state: any) => state.index)\r\n  const isAnswered = useSelector((state: any) => state.isAnswered)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const question = questions[questionIndex]\r\n  const video_id = question.youtube_id\r\n  const stopTime = question.stop\r\n\r\n\r\n    const params = {\r\n    playerVars: {\r\n      autoplay: 0,\r\n      modestbranding: 1,\r\n      controls: 0, \r\n      disablekb: 1\r\n    },\r\n  };\r\n\r\n  /* Advance to Next Question Upon Video Completion */\r\n\r\n  const checkState = () => {\r\n    let playerState: number = videoElement.target.playerInfo.playerState\r\n    if (playerState === 0) {\r\n      dispatch({\r\n        type: 'SET_ANSWERED',\r\n        answered: false,\r\n      })\r\n\r\n      dispatch({\r\n        type: 'SET_INDEX',\r\n        index: questionIndex + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  const questionInterval = () => {\r\n    const interval = setInterval(async () => {\r\n      let stopTime2 = question.stop\r\n      if (videoElement && videoElement.target.getCurrentTime() > 0) {\r\n        const elapsed_seconds = videoElement.target.getCurrentTime();\r\n        let done = false\r\n\r\n        if (elapsed_seconds >= (stopTime + 0.2))\r\n        {\r\n          if (videoElement.target.playerInfo.playerState === 2) {videoElement.target.playVideo()}\r\n          done = true\r\n        }\r\n\r\n        /* Stop Video if Midpoint is reached */\r\n        if (elapsed_seconds >= stopTime && !done)\r\n        {\r\n          videoElement.target.seekTo(stopTime)\r\n          videoElement.target.pauseVideo()\r\n        }\r\n        done ? clearInterval(interval) : console.log(\"not done\")\r\n\r\n      }\r\n    }, 200); }\r\n\r\n  //get current time and video status in real time\r\n  useEffect(() => {\r\n\r\n    // return () => {\r\n    //   clearInterval(interval);\r\n    // };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isAnswered == true) {\r\n    videoElement.target.seekTo(stopTime + 0.5)\r\n    videoElement.target.playVideo()\r\n    }\r\n  }, [isAnswered]);\r\n\r\n  const _onReady = (event: YouTubePlayer) => {\r\n    videoElement = event;\r\n    questionInterval()\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-question\">\r\n      <YouTube videoId={video_id} opts={params} onReady={_onReady} onStateChange={checkState}/>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport VideoQuestion from './VideoQuestion'\r\n\r\nfunction Question() {\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null)\r\n\r\n  const score = useSelector((state: any) => state.score)\r\n  const questions = useSelector((state: any) => state.questions)\r\n  const questionIndex = useSelector((state: any) => state.index)\r\n  const answerSelected = useSelector((state: any) => state.isAnswered)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const question = questions[questionIndex]\r\n  const options = question.answers\r\n  const answer = question.correct_answer\r\n  const incorrect_answers = question.answers.filter((val: object) => val != answer)\r\n\r\n  const handleListItemClick = (event: any) => {\r\n    dispatch({\r\n      type: 'SET_ANSWERED',\r\n      answered: true,\r\n    })\r\n    setSelectedAnswer(event.target.textContent)\r\n\r\n    if (event.target.textContent === answer) {\r\n      dispatch({\r\n        type: 'SET_SCORE',\r\n        score: score + 1,\r\n      })\r\n    }\r\n\r\n    if (question.type != \"Guess That Player\" && questionIndex + 1 <= questions.length) {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: 'SET_ANSWERED',\r\n          answered: false,\r\n        })\r\n        setSelectedAnswer(null)\r\n\r\n        dispatch({\r\n          type: 'SET_INDEX',\r\n          index: questionIndex + 1,\r\n        })\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const getClass = (option: string) => {\r\n    if (!answerSelected) {\r\n      return ``;\r\n    }\r\n\r\n\r\n    if (answerSelected) {\r\n    if (option === answer) {\r\n      return `correct off`\r\n    }\r\n\r\n    if (option === selectedAnswer) {\r\n      return `selected off`\r\n    }\r\n\r\n    else {return 'off'}\r\n\r\n  }\r\n\r\n  }\r\n\r\n  if (!question) {\r\n    return <div>Loading</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Question {questionIndex + 1}</h3>\r\n      <h3>{question.question}</h3>\r\n      {question.type==\"Guess That Player\" ? <VideoQuestion/> : ''}\r\n      <ul className=\"answers\">\r\n        {options.map((option: string, i: number) => (\r\n          <li key={i} onClick={handleListItemClick} className={getClass(option)}>\r\n            {option}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        Score: {score} / {questions.length}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Question\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction FinalScreen() {\r\n  const score = useSelector((state) => state.score)\r\n  const questions = useSelector((state) => state.questions)\r\n  const FinalScore = Math.round((score / questions.length)*100)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const replay = () => {\r\n    dispatch({\r\n      type: 'SET_INDEX',\r\n      index: 0,\r\n    })\r\n\r\n    dispatch({\r\n      type: 'SET_SCORE',\r\n      score: 0,\r\n    })\r\n  }\r\n\r\n  const settings = () => {\r\n    dispatch({\r\n      type: 'SET_QUESTIONS',\r\n      questions: [],\r\n    })\r\n\r\n    dispatch({\r\n      type: 'SET_SCORE',\r\n      score: 0,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Final Score: {FinalScore + \"%\"}</h3>\r\n      <button onClick={replay}>Try Quiz Again</button>\r\n      <button onClick={settings}>Back to Home</button>\r\n    </div>\r\n  )\r\n}\r\nexport default FinalScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport MenuItem from '@mui/material/MenuItem'\r\n\r\nexport default function FormModal(props: any) {\r\n  // interface FormDataType {type:string, category: string, difficulty: string, question:string, correct_answer: string, answer2: string, answer3: string, answer4: string}\r\n\r\n  const types = useSelector((state: any) => state.questionTypes)\r\n  const categories = useSelector((state: any) => state.questionCategories)\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n  // let formData = {type:\"\", category: \"\", difficulty: \"\", question: \"\", correct_answer: \"\", answer2: \"\", answer3: \"\", answer4: \"\"}\r\n  let formData: any = {type: \"Multiple Choice\", category: \"\", difficulty: \"\"}\r\n  const [responseBody, setResponseBody] = useState(formData)\r\n\r\n  /* Form Handlers */\r\n\r\n  const FormOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const FormClose = () => {\r\n    setOpen(false)\r\n    props.setOpened(false)\r\n  };\r\n\r\n  const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    let {name, value} = event.target\r\n    formData = {...formData, [name]: value}\r\n  }\r\n  const submitHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n      let answersArr: string[] = []\r\n      for (let i in formData) {\r\n        i == \"correct_answer\" ? answersArr.push(formData[i]) : console.log(\"continue\")\r\n        if (i.match(/^answer/)) {\r\n          answersArr.push(formData[i])\r\n          delete formData[i]\r\n        }\r\n      }\r\n      formData = {...formData, answers: answersArr}\r\n      console.log(formData)\r\n      setResponseBody({...formData})\r\n\r\n      fetch('https://m2ic13md4d.execute-api.us-east-2.amazonaws.com/Prod/submitForm', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n      })\r\n      .then( res => {\r\n        console.log(res)\r\n        if (res.ok) {\r\n          // const response = await res.json()\r\n          FormClose()\r\n        }\r\n      })\r\n      .then(data =>{\r\n        console.log(data)\r\n      })\r\n      .catch(error => {\r\n\r\n      })\r\n\r\n      console.log(responseBody)\r\n \r\n  }\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open)\r\n  },[props.open]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={FormClose}>\r\n        <DialogTitle align='center'\r\n        sx={{  }}\r\n        >Suggestions\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n          align='center'\r\n          sx={{marginBottom: 2 }}\r\n          >\r\n            Much like the melee community itself, this site depends upon the contributions of fans to provide challenging questions and keep things interesting.\r\n             Please submit any questions you can think of and they will be approved and added to the game!\r\n          </DialogContentText>\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n          required\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"questionType\"\r\n          name=\"type\"\r\n          select\r\n          label=\"Select Type\"\r\n          value={types[0]}\r\n          helperText=\"Please select question type\"\r\n        >\r\n          {types.map((option: string, i: number) => (\r\n            <MenuItem key={i} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField onChange={(e)=>inputChangeHandler(e)}\r\n          required\r\n            margin=\"dense\"\r\n            id=\"question\"\r\n            name=\"question\"\r\n            label=\"Question\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            margin=\"dense\"\r\n            id=\"correctAnswer\"\r\n            name=\"correct_answer\"\r\n            label=\"Correct Answer\"\r\n            type=\"email\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            margin=\"dense\"\r\n            id=\"answer2\"\r\n            name=\"answer2\"\r\n            label=\"Answer 2\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            margin=\"dense\"\r\n            id=\"answer3\"\r\n            name=\"answer3\"\r\n            label=\"Answer 3\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            margin=\"dense\"\r\n            id=\"answer4\"\r\n            name=\"answer4\"\r\n            label=\"Answer 4\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={submitHandler}>Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Menu, { MenuProps } from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Divider from '@mui/material/Divider';\r\nimport ScoreboardIcon from '@mui/icons-material/Scoreboard';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport FormModal from './FormModal';\r\n\r\n/* Options Menu */\r\nconst StyledMenu = styled((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color:\r\n      theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OptionsMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [opened, setOpened] = useState(false)\r\n  const open = Boolean(anchorEl);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = (e: { target: any; }) => {\r\n    setAnchorEl(null);\r\n    e.target.innerText == \"Suggestions\" ? setOpened(true) : setOpened(false)\r\n  };\r\n\r\n  const reset = () =>\r\n  {\r\n    dispatch({\r\n        type: 'SET_QUESTIONS',\r\n        questions: [],\r\n      })\r\n\r\n      dispatch({\r\n        type: 'SET_INDEX',\r\n        index: 0,\r\n      })\r\n  \r\n      dispatch({\r\n        type: 'SET_SCORE',\r\n        score: 0,\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"options-button\">\r\n      <Button\r\n        id=\"options-button\"\r\n        aria-controls={open ? 'demo-customized-menu' : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        Options\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={reset} disableRipple>\r\n          <HomeIcon />\r\n          Home/Reset\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose} disableRipple>\r\n          <ScoreboardIcon />\r\n          Scores\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose} disableRipple>\r\n          <EditIcon />\r\n          Suggestions\r\n        </MenuItem>\r\n      </StyledMenu>\r\n      <FormModal setOpened={setOpened} open={opened}/>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\nimport Settings from './Components/Settings'\r\nimport Question from './Components/Question'\r\nimport FinalScreen from './Components/FinalScreen'\r\nimport OptionsMenu from './Components/Menu/Options'\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const darkTheme = createTheme({ palette: { mode: 'dark', }, });\r\n  const questions = useSelector((state) => state.questions)\r\n  const questionIndex = useSelector((state) => state.index)\r\n\r\n  let component\r\n\r\n  if (questions.length && questionIndex + 1 <= questions.length) {\r\n    component = <Question />\r\n  } else if (!questions.length) {\r\n    component = <Settings />\r\n  } else {\r\n    component = <FinalScreen />\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n    <div className=\"vid-container\">\r\n    <iframe src=\"https://www.youtube.com/embed/06tTwaaxbRc?controls=0&autoplay=1&mute=1&playlist=06tTwaaxbRc&loop=1\"></iframe>\r\n    </div>\r\n    <OptionsMenu/>\r\n    <div className=\"App\">\r\n      <div className=\"app-container\">{component}</div>\r\n    </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore } from \"redux\"\r\n\r\n\r\nconst initState = {\r\n  options: {\r\n    loading: false,\r\n    question_category: `All`,\r\n    question_difficulty: ``,\r\n    question_type: `All`,\r\n    amount_of_questions: 10,\r\n  },\r\n  questionTypes: [\"Multiple Choice\", \"True/False\", \"Guess That Player\"],\r\n  questionCategories: [],\r\n  questions: [],\r\n  index: 0,\r\n  score: 0,\r\n  text: 'default',\r\n  isAnswered: false\r\n}\r\n\r\nconst Reducer = (state = initState, action: any) => {\r\n  switch (action.type) {\r\n\r\n    case 'CHANGE_CATEGORY':\r\n      return {\r\n        ...state,\r\n        options: {\r\n          ...state.options,\r\n          question_category: action.question_category,\r\n        },\r\n      }\r\n\r\n    case 'CHANGE_DIFFICULTY':\r\n      return {\r\n        ...state,\r\n        options: {\r\n          ...state.options,\r\n          question_difficulty: action.question_difficulty,\r\n        },\r\n      }\r\n\r\n    case 'CHANGE_TYPE':\r\n      return {\r\n        ...state,\r\n        options: {\r\n          ...state.options,\r\n          question_type: action.value,\r\n        },\r\n      }\r\n\r\n    case 'CHANGE_AMOUNT':\r\n      return {\r\n        ...state,\r\n        options: {\r\n          ...state.options,\r\n          amount_of_questions: action.value,\r\n        },\r\n      }\r\n\r\n    case 'SET_QUESTIONS':\r\n      return {\r\n        ...state,\r\n        questions: action.questions,\r\n      }\r\n\r\n    case 'SET_INDEX':\r\n      return {\r\n        ...state,\r\n        index: action.index,\r\n      }\r\n\r\n    case 'SET_SCORE':\r\n      return {\r\n        ...state,\r\n        score: action.score,\r\n      }\r\n\r\n      case 'SET_ANSWERED':\r\n        return {\r\n          ...state,\r\n          isAnswered: action.answered\r\n        }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst store = createStore(Reducer)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './store/Reducer'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}