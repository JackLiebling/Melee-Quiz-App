{"version":3,"sources":["Components/QuestionButton.js","Components/Settings.js","Components/VideoQuestion.tsx","Components/Question.tsx","Components/FinalScreen.js","Components/Menu/FormModal.tsx","Components/Menu/ContactModal.tsx","Components/Menu/Options.tsx","Components/VideoBackground.tsx","App.js","store/Reducer.tsx","index.js"],"names":["QuestionButton","props","questionCategory","useSelector","state","options","question_category","questionType","question_type","questionAmount","amount_of_questions","questionIndex","index","dispatch","useDispatch","onClick","type","score","questionSet","Object","values","questionArray","filter","val","i","category","shuffled","map","value","sort","Math","random","a","b","questions","text","Settings","types","questionTypes","className","onChange","event","target","option","min","videoElement","App","isAnswered","question","video_id","youtube_id","stopTime","stop","useEffect","seekTo","playVideo","videoId","opts","playerVars","autoplay","modestbranding","controls","disablekb","onReady","interval","setInterval","getCurrentTime","elapsed_seconds","done","playerInfo","playerState","pauseVideo","clearInterval","console","log","questionInterval","onStateChange","answered","Question","useState","selectedAnswer","setSelectedAnswer","answerSelected","answers","answer","correct_answer","handleListItemClick","textContent","length","setTimeout","getClass","FinalScreen","FinalScore","round","FormModal","questionCategories","open","setOpen","alertStatus","setAlertStatus","alert","setAlert","additionalProps","difficulty","answer2","formData","setFormData","JSON","stringify","FormClose","setFormOpened","removeProp","property","current","copy","inputChangeHandler","name","answer3","answer4","Dialog","onClose","Collapse","in","Alert","severity","action","IconButton","sx","marginLeft","color","size","fontSize","mb","DialogTitle","align","DialogContent","DialogContentText","marginBottom","TextField","e","required","id","select","label","helperText","filtered","MenuItem","margin","fullWidth","variant","DialogActions","Button","isEmpty","some","x","answersArr","match","push","fetch","method","headers","body","then","res","ok","data","catch","error","ContactModal","maxWidth","setContactOpened","href","Box","display","flexDirection","m","width","gap","StyledMenu","styled","Menu","elevation","anchorOrigin","vertical","horizontal","transformOrigin","theme","borderRadius","marginTop","spacing","minWidth","palette","mode","grey","boxShadow","padding","secondary","marginRight","backgroundColor","alpha","primary","main","selectedOpacity","OptionsMenu","React","anchorEl","setAnchorEl","formOpened","contactOpened","Boolean","handleClose","undefined","disableElevation","currentTarget","endIcon","MenuListProps","disableRipple","VideoBackground","params","showinfo","autohide","mute","loop","playlist","component","darkTheme","createTheme","ThemeProvider","initState","loading","question_difficulty","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e0e7c514.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport questionArray from '../json/questions.json'\r\n\r\nfunction QuestionButton(props) {\r\n  /* State Declarations */\r\n  const questionCategory = useSelector((state) => state.options.question_category)\r\n  const questionType = useSelector((state) => state.options.question_type)\r\n  const questionAmount = useSelector((state) => state.options.amount_of_questions)\r\n  const questionIndex = useSelector((state) => state.index)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  // const handleQuery = async () => {\r\n  //   let apiUrl = `https://opentdb.com/api.php?amount=${questionAmount}`\r\n\r\n    \r\n\r\n  //   if (questionType.length) {\r\n  //     apiUrl = apiUrl.concat(`&type=${questionType}`)\r\n  //   }\r\n\r\n  //   await fetch(apiUrl)\r\n  //     .then((res) => res.json())\r\n  //     .then((response) => {\r\n  //       setQuestions(response.results)\r\n  //     })\r\n\r\n  //   if (questionIndex > 0) {\r\n  //     dispatch({\r\n  //       type: 'SET_INDEX',\r\n  //       index: 0,\r\n  //     })\r\n\r\n  //     dispatch({\r\n  //       type: 'SET_SCORE',\r\n  //       score: 0,\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n\r\nconst populateQuestions = () => {\r\n  /* Reset score/questions from previous game */\r\n  if (questionIndex > 0) {\r\n        dispatch({\r\n          type: 'SET_INDEX',\r\n          index: 0,\r\n        })\r\n  \r\n        dispatch({\r\n          type: 'SET_SCORE',\r\n          score: 0,\r\n        })\r\n}\r\n\r\n/* parse questions from JSON into new object array, validate input for category, type, etc. */\r\nlet questionSet = Object.values(questionArray).filter((val, i)=> {\r\n  if (questionType == \"All\" && questionCategory == \"All\") {return true}\r\n  else if (questionType == \"All\") {return val.category == questionCategory}\r\n  else if (questionCategory == \"All\") {return val.type == questionType}\r\n  else {return val.type == questionType && val.category == questionCategory}\r\n}\r\n);\r\n\r\n/* Randomize Question Array */\r\nlet shuffled = questionSet\r\n    .map(value => ({ value, sort: Math.random() }))\r\n    .sort((a, b) => a.sort - b.sort)\r\n    .map(({ value }) => value)\r\n\r\n/* Filter Randomized Selection by Number of Questions Selected */\r\nquestionSet = shuffled.filter((val, i)=> i <= questionAmount - 1)\r\n\r\ndispatch ({\r\n  type: 'SET_QUESTIONS', \r\n  questions: questionSet\r\n})\r\n\r\n\r\n}\r\n\r\n  return <button onClick={populateQuestions}>{props.text}</button>\r\n}\r\nexport default QuestionButton\r\n","import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport QuestionButton from './QuestionButton'\r\n\r\nfunction Settings () {\r\n    const questionCategory = useSelector((state) => state.options.question_category)\r\n    const types = useSelector((state) => state.questionTypes)\r\n    const questionType = useSelector((state) => state.options.question_type)\r\n    const questionAmount = useSelector((state) => state.options.amount_of_questions)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    /* Selection Handlers*/\r\n    const handleGameTypeChange = event => {\r\n      dispatch({\r\n        type: 'CHANGE_TYPE',\r\n        value: event.target.value\r\n      })\r\n    }\r\n\r\n    const handleQuestionNumChange = event => {\r\n      dispatch({\r\n        type: 'CHANGE_AMOUNT',\r\n        value: event.target.value\r\n      })\r\n    }\r\n\r\n        return (\r\n            <div className='options'>\r\n              <div>\r\n                <h2>Select Game Type:</h2>\r\n                <select onChange={handleGameTypeChange}>\r\n                {types.map((option, i) => (\r\n                <option key={i} value={option}>\r\n                {option}\r\n                </option>\r\n                ))}\r\n                </select>\r\n              </div>\r\n              {/* <div>\r\n                <h2>Select Difficulty:</h2>\r\n                <select value={questionDifficulty} onChange={handleDifficultyChange}>\r\n                  <option value=\"\" key=\"difficulty-0\">All</option>\r\n                  <option value=\"easy\" key=\"difficulty-1\">Easy</option>\r\n                  <option value=\"medium\" key=\"difficulty-2\">Medium</option>\r\n                  <option value=\"hard\" key=\"difficulty-3\">Hard</option>\r\n                </select>\r\n              </div> */}\r\n                <div>\r\n                <h2>Number of Questions:</h2>\r\n                <input type=\"number\" min=\"0\" onChange={handleQuestionNumChange} />\r\n              </div>\r\n\r\n              <QuestionButton text=\"Show Me Your Moves!\"/>\r\n\r\n            </div>\r\n\r\n          )\r\n\r\n\r\n}\r\n\r\nexport default Settings","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport YouTube, {YouTubePlayer} from 'react-youtube'\r\n\r\nlet videoElement: YouTubePlayer = null\r\n\r\nexport default function App() {\r\n  const questions = useSelector((state: any) => state.questions)\r\n  const questionIndex = useSelector((state: any) => state.index)\r\n  const isAnswered = useSelector((state: any) => state.isAnswered)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const question = questions[questionIndex]\r\n  const video_id = question.youtube_id\r\n  const stopTime = question.stop\r\n\r\n\r\n    const params = {\r\n    playerVars: {\r\n      autoplay: 0,\r\n      modestbranding: 1,\r\n      controls: 0, \r\n      disablekb: 1\r\n    },\r\n  }\r\n\r\n  /* Advance to Next Question Upon Video Completion */\r\n\r\n  const checkState = () => {\r\n    let playerState: number = videoElement.target.playerInfo.playerState\r\n    if (playerState === 0) {\r\n      dispatch({\r\n        type: 'SET_ANSWERED',\r\n        answered: false,\r\n      })\r\n\r\n      dispatch({\r\n        type: 'SET_INDEX',\r\n        index: questionIndex + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  const questionInterval = () => {\r\n    const interval = setInterval(async () => {\r\n      let stopTime2 = question.stop\r\n      if (videoElement && videoElement.target.getCurrentTime() > 0) {\r\n        const elapsed_seconds = videoElement.target.getCurrentTime();\r\n        let done = false\r\n\r\n        if (elapsed_seconds >= (stopTime + 0.2))\r\n        {\r\n          if (videoElement.target.playerInfo.playerState === 2) {videoElement.target.playVideo()}\r\n          done = true\r\n        }\r\n\r\n        /* Stop Video if Midpoint is reached */\r\n        if (elapsed_seconds >= stopTime && !done)\r\n        {\r\n          videoElement.target.seekTo(stopTime)\r\n          videoElement.target.pauseVideo()\r\n        }\r\n        done ? clearInterval(interval) : console.log(\"not done\")\r\n\r\n      }\r\n    }, 200); }\r\n\r\n  //get current time and video status in real time\r\n  useEffect(() => {\r\n\r\n    // return () => {\r\n    //   clearInterval(interval);\r\n    // };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isAnswered == true) {\r\n    videoElement.target.seekTo(stopTime + 0.5)\r\n    videoElement.target.playVideo()\r\n    }\r\n  }, [isAnswered]);\r\n\r\n  const _onReady = (event: YouTubePlayer) => {\r\n    videoElement = event;\r\n    questionInterval()\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-question\">\r\n      <YouTube videoId={video_id} opts={params} onReady={_onReady} onStateChange={checkState}/>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport VideoQuestion from './VideoQuestion'\r\n\r\nfunction Question() {\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null)\r\n\r\n  const score = useSelector((state: any) => state.score)\r\n  const questions = useSelector((state: any) => state.questions)\r\n  const questionIndex = useSelector((state: any) => state.index)\r\n  const answerSelected = useSelector((state: any) => state.isAnswered)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const question = questions[questionIndex]\r\n  const options = question.answers\r\n  const answer = question.correct_answer\r\n  const incorrect_answers = question.answers.filter((val: object) => val != answer)\r\n\r\n  const handleListItemClick = (event: any) => {\r\n    dispatch({\r\n      type: 'SET_ANSWERED',\r\n      answered: true,\r\n    })\r\n    setSelectedAnswer(event.target.textContent)\r\n\r\n    if (event.target.textContent === answer) {\r\n      dispatch({\r\n        type: 'SET_SCORE',\r\n        score: score + 1,\r\n      })\r\n    }\r\n\r\n    if (question.type != \"Guess That Player\" && questionIndex + 1 <= questions.length) {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: 'SET_ANSWERED',\r\n          answered: false,\r\n        })\r\n        setSelectedAnswer(null)\r\n\r\n        dispatch({\r\n          type: 'SET_INDEX',\r\n          index: questionIndex + 1,\r\n        })\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const getClass = (option: string) => {\r\n    if (!answerSelected) {\r\n      return ``;\r\n    }\r\n\r\n\r\n    if (answerSelected) {\r\n    if (option === answer) {\r\n      return `correct off`\r\n    }\r\n\r\n    if (option === selectedAnswer) {\r\n      return `selected off`\r\n    }\r\n\r\n    else {return 'off'}\r\n\r\n  }\r\n\r\n  }\r\n\r\n  if (!question) {\r\n    return <div>Loading</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Question {questionIndex + 1}</h3>\r\n      <h3>{question.question}</h3>\r\n      {question.type==\"Guess That Player\" ? <VideoQuestion/> : ''}\r\n      <ul className=\"answers\">\r\n        {options.map((option: string, i: number) => (\r\n          <li key={i} onClick={handleListItemClick} className={getClass(option)}>\r\n            {option}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        Score: {score} / {questions.length}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Question\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nfunction FinalScreen() {\r\n  const score = useSelector((state) => state.score)\r\n  const questions = useSelector((state) => state.questions)\r\n  const FinalScore = Math.round((score / questions.length)*100)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const replay = () => {\r\n    dispatch({\r\n      type: 'SET_INDEX',\r\n      index: 0,\r\n    })\r\n\r\n    dispatch({\r\n      type: 'SET_SCORE',\r\n      score: 0,\r\n    })\r\n  }\r\n\r\n  const settings = () => {\r\n    dispatch({\r\n      type: 'SET_QUESTIONS',\r\n      questions: [],\r\n    })\r\n\r\n    dispatch({\r\n      type: 'SET_SCORE',\r\n      score: 0,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Final Score: {FinalScore + \"%\"}</h3>\r\n      <button onClick={replay}>Try Quiz Again</button>\r\n      <button onClick={settings}>Back to Home</button>\r\n    </div>\r\n  )\r\n}\r\nexport default FinalScreen\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport Alert from '@mui/material/Alert'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport MenuItem from '@mui/material/MenuItem'\r\n\r\nexport default function FormModal(props: any) {\r\n  // interface FormDataType {type:string, category: string, difficulty: string, question:string, correct_answer: string, answer2: string, answer3: string, answer4: string}\r\n\r\n  const types = useSelector((state: any) => state.questionTypes)\r\n  const categories = useSelector((state: any) => state.questionCategories)\r\n  \r\n  const [open, setOpen] = useState(false)\r\n  const [alertStatus, setAlertStatus] = useState(\"error\")\r\n  const [alert, setAlert] = useState(false)\r\n  \r\n  let additionalProps = {category: \"\", difficulty: \"\"}\r\n  const [formData, setFormData]: any = useState({type: \"\", question: \"\", correct_answer: \"\", answer2: \"\"})\r\n\r\n  console.log(\"state on render is: \" + JSON.stringify(formData))\r\n\r\n  /* Form Handlers */\r\n\r\n  const FormOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const FormClose = () => {\r\n    setOpen(false)\r\n    props.setFormOpened(false)\r\n  }\r\n\r\n  const removeProp = (property: any) => {\r\n    setFormData ((current: any) => {\r\n      let copy = {...current}\r\n      delete copy[property]\r\n      return {...copy}\r\n    })\r\n  }\r\n\r\n  const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    let {name, value} = event.target\r\n     setFormData({...formData, [name]: value})\r\n     if (formData.type == \"Multiple Choice\") {setFormData({...formData,  answer3: \"\", answer4: \"\"})}\r\n  }\r\n  const submitHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n    \r\n      /* Check if at least one field is empty */\r\n      const isEmpty = Object.values(formData).some(x => x === null || x === '')\r\n      console.log(formData)\r\n      console.log(isEmpty)\r\n      if (isEmpty) {\r\n        setAlert(true)\r\n        return\r\n      }\r\n\r\n      if (!isEmpty) {\r\n      /* Reformat Form Data */\r\n      let answersArr: string[] = []\r\n      for (let i in formData) {\r\n        if (i == \"correct_answer\") {\r\n        answersArr.push(formData[i])\r\n        continue\r\n        }\r\n        else if (i.match(/^answer/)) {\r\n          console.log(\"entered regex if statement\")\r\n          answersArr.push(formData[i])\r\n          removeProp(i)\r\n        }\r\n      }\r\n      setFormData( (current: any) => {\r\n        return {...additionalProps, ...current, answers: answersArr}\r\n      })\r\n\r\n      setAlertStatus(\"success\")\r\n      setAlert(true)\r\n\r\n      fetch('https://m2ic13md4d.execute-api.us-east-2.amazonaws.com/Prod/submitForm', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n      })\r\n      .then( res => {\r\n        console.log(res)\r\n        if (res.ok) {\r\n          // const response = await res.json()\r\n          FormClose()\r\n        }\r\n      })\r\n      .then(data =>{\r\n        console.log(data)\r\n      })\r\n      .catch(error => {\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open)\r\n  },[props.open]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={FormClose}>\r\n      <Collapse in={alert}>\r\n      <Alert\r\n          severity={alertStatus == \"success\" ? \"success\" : \"error\"}\r\n          action={\r\n            <IconButton\r\n              sx={{marginLeft: 0}}\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                setAlert(false);\r\n              }}\r\n            >\r\n              <CloseIcon \r\n              sx={{marginLeft: 0}}\r\n              fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n          sx={{ mb: 2 }}\r\n        >\r\n          {alertStatus == \"success\" ? \"Thank you for your submission!\" : \"All fields are required!\"}\r\n        </Alert></Collapse>\r\n        <DialogTitle align='center'\r\n        sx={{  }}\r\n        >Submit A Question\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n          align='center'\r\n          sx={{marginBottom: 4 }}\r\n          >\r\n            Much like the Melee community itself, this project depends on the contributions of fans to provide stimulating questions and keep things interesting.\r\n             Please submit any questions, no matter how obscure or difficult, and they will be reviewed and added to the game!\r\n          </DialogContentText>\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n          required\r\n          id=\"questionType\"\r\n          name=\"type\"\r\n          select\r\n          label=\"Select Type\"\r\n          helperText=\"Please select question type\"\r\n        >\r\n          {types.filter((filtered: string) => filtered != \"Guess That Player\").map((option: string, i: number) => (\r\n            <MenuItem key={i} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField onChange={(e)=>inputChangeHandler(e)}\r\n          required\r\n            margin=\"dense\"\r\n            id=\"question\"\r\n            name=\"question\"\r\n            label=\"Question\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            margin=\"dense\"\r\n            id=\"correctAnswer\"\r\n            name=\"correct_answer\"\r\n            label=\"Correct Answer\"\r\n            type=\"email\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            margin=\"dense\"\r\n            id=\"answer2\"\r\n            name=\"answer2\"\r\n            label=\"Answer 2\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          {formData.type == \"Multiple Choice\" ?\r\n          <div>\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            margin=\"dense\"\r\n            id=\"answer3\"\r\n            name=\"answer3\"\r\n            label=\"Answer 3\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            margin=\"dense\"\r\n            id=\"answer4\"\r\n            name=\"answer4\"\r\n            label=\"Answer 4\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          /></div> : ''}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={submitHandler}>Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect, useRef} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport MailIcon from '@mui/icons-material/Mail'\r\nimport GitHubIcon from '@mui/icons-material/GitHub'\r\nimport YouTubeIcon from '@mui/icons-material/YouTube'\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport { Box } from '@mui/material'\r\n\r\nexport default function ContactModal(props: any) {\r\n  // interface FormDataType {type:string, category: string, difficulty: string, question:string, correct_answer: string, answer2: string, answer3: string, answer4: string}\r\n  \r\n  const [open, setOpen] = useState(false)\r\n\r\n  /* Form Handlers */\r\n\r\n  const FormOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const FormClose = () => {\r\n    setOpen(false)\r\n    props.setContactOpened(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open)\r\n  },[props.open]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog fullWidth={true} maxWidth={'md'}\r\n      open={open} onClose={FormClose}>\r\n        <DialogTitle align='center'\r\n        >A Little Bit About This Project\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText\r\n          align='center'\r\n          sx={{marginBottom: 4 }}\r\n          >\r\n            This is a passion project of mine made possible not only from input by the people that use it, but by the elegant libraries it's built on, namely <a target=\"_blank\" href=\"https://reactjs.org/\">ReactJS </a> \r\n            and <a target=\"_blank\" href=\"https://mui.com/\">Material UI</a>. I've used to create it, with help from content provided by YouTuber <a target=\"_blank\" href=\"https://www.youtube.com/c/Frudgey\">Frudgey</a>. \r\n            Everything is still ultimately a work in progress and I am open to any and all suggestions you may have. I would also note that I am looking to collaborate with a graphic designer to add a \r\n            little more flair to the UI and give it an even more classic Melee feel so if that sounds like you, then please drop me a line so we can work together. Feel free to reach out to me on any of the platforms listed below.\r\n          </DialogContentText>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              m: 'auto',\r\n              width: 'fit-content',\r\n              gap: '20px',\r\n            }}\r\n          >\r\n            <a target=\"_blank\" href=\"mailto:tristan@hitt.dev\"> <MailIcon fontSize=\"large\"/> </a>\r\n            <a target=\"_blank\" href=\"https://github.com/thitt7\"> <GitHubIcon fontSize=\"large\"/> </a>\r\n            <a target=\"_blank\" href=\"https://www.youtube.com/c/Frudgey\"> <YouTubeIcon fontSize=\"large\"/> </a>\r\n            <a target=\"_blank\" href=\"https://www.linkedin.com/in/tristan-hitt-6b0a0346/\"> <LinkedInIcon fontSize=\"large\" /> </a>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Menu, { MenuProps } from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport QuestionMarkIcon from '@mui/icons-material/QuestionMark';\r\nimport Divider from '@mui/material/Divider';\r\nimport ScoreboardIcon from '@mui/icons-material/Scoreboard';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport FormModal from './FormModal'\r\nimport ContactModal from './ContactModal';\r\n\r\n/* Options Menu */\r\nconst StyledMenu = styled((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color:\r\n      theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OptionsMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [formOpened, setFormOpened] = useState(false)\r\n  const [contactOpened, setContactOpened] = useState(false)\r\n  const open = Boolean(anchorEl);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n  const handleClose = (e: { target: any; }) => {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const handleQuestion = (event: React.MouseEvent<HTMLElement>) => {\r\n    setFormOpened(true)\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const handleContact = (event: React.MouseEvent<HTMLElement>) => {\r\n    setContactOpened(true)\r\n    setAnchorEl(null)\r\n  }\r\n\r\n  const reset = () =>\r\n  {\r\n    dispatch({\r\n        type: 'SET_QUESTIONS',\r\n        questions: [],\r\n      })\r\n\r\n      dispatch({\r\n        type: 'SET_INDEX',\r\n        index: 0,\r\n      })\r\n  \r\n      dispatch({\r\n        type: 'SET_SCORE',\r\n        score: 0,\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"options-button\">\r\n      <Button\r\n        id=\"options-button\"\r\n        aria-controls={open ? 'demo-customized-menu' : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        Options\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={reset} disableRipple>\r\n          <HomeIcon />\r\n          Home/Reset\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose} disableRipple>\r\n          <ScoreboardIcon />\r\n          Scores\r\n        </MenuItem>\r\n        <MenuItem onClick={handleQuestion} disableRipple>\r\n          <QuestionMarkIcon />\r\n          Submit A Question\r\n        </MenuItem>\r\n        <MenuItem onClick={handleContact} disableRipple>\r\n          <InfoIcon />\r\n          About\r\n        </MenuItem>\r\n      </StyledMenu>\r\n      \r\n      <FormModal setFormOpened={setFormOpened} open={formOpened}/>\r\n      <ContactModal setContactOpened={setContactOpened} open={contactOpened}/>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport YouTube, {YouTubePlayer} from 'react-youtube'\r\n\r\nconst VideoBackground = () => {\r\nlet videoElement: YouTubePlayer = null\r\nconst video_id = \"06tTwaaxbRc\"\r\n\r\nconst params = {\r\n    playerVars: {\r\n      autoplay: 1,\r\n      modestbranding: 1,\r\n      controls: 0, \r\n      disablekb: 1,\r\n      showinfo: 0,\r\n      autohide: 1,\r\n      mute: 1, \r\n      loop: 1,\r\n      playlist: video_id\r\n    },\r\n  }\r\n\r\nconst _onReady = (event: YouTubePlayer) => {\r\n    videoElement = event\r\n    console.log(event.target)\r\n    videoElement.target.playVideo()\r\n}\r\n\r\nreturn (\r\n    <div className=\"vid-container off\">\r\n      <YouTube videoId={video_id} opts={params} onReady={_onReady}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default VideoBackground","import { useSelector } from 'react-redux'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\nimport Settings from './Components/Settings'\r\nimport Question from './Components/Question'\r\nimport FinalScreen from './Components/FinalScreen'\r\nimport OptionsMenu from './Components/Menu/Options'\r\nimport VideoBackground from './Components/VideoBackground';\r\n\r\nimport './app.scss'\r\n\r\nfunction App() {\r\n  const darkTheme = createTheme({ palette: { mode: 'dark', }, });\r\n  const questions = useSelector((state) => state.questions)\r\n  const questionIndex = useSelector((state) => state.index)\r\n\r\n  let component\r\n\r\n  if (questions.length && questionIndex + 1 <= questions.length) {\r\n    component = <Question />\r\n  } else if (!questions.length) {\r\n    component = <Settings />\r\n  } else {\r\n    component = <FinalScreen />\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n    <VideoBackground/>\r\n    <OptionsMenu/>\r\n    <div className=\"App\">\r\n      <div className=\"app-container\">{component}</div>\r\n    </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { createStore } from \"redux\"\r\n\r\n\r\nconst initState = {\r\n  options: {\r\n    loading: false,\r\n    question_category: `All`,\r\n    question_difficulty: ``,\r\n    question_type: `All`,\r\n    amount_of_questions: 10,\r\n  },\r\n  questionTypes: [\"Multiple Choice\", \"True/False\", \"Guess That Player\"],\r\n  questionCategories: [],\r\n  questions: [],\r\n  index: 0,\r\n  score: 0,\r\n  text: 'default',\r\n  isAnswered: false\r\n}\r\n\r\nconst Reducer = (state = initState, action: any) => {\r\n  switch (action.type) {\r\n\r\n    case 'CHANGE_CATEGORY':\r\n      return {\r\n        ...state,\r\n        options: {\r\n          ...state.options,\r\n          question_category: action.question_category,\r\n        },\r\n      }\r\n\r\n    case 'CHANGE_DIFFICULTY':\r\n      return {\r\n        ...state,\r\n        options: {\r\n          ...state.options,\r\n          question_difficulty: action.question_difficulty,\r\n        },\r\n      }\r\n\r\n    case 'CHANGE_TYPE':\r\n      return {\r\n        ...state,\r\n        options: {\r\n          ...state.options,\r\n          question_type: action.value,\r\n        },\r\n      }\r\n\r\n    case 'CHANGE_AMOUNT':\r\n      return {\r\n        ...state,\r\n        options: {\r\n          ...state.options,\r\n          amount_of_questions: action.value,\r\n        },\r\n      }\r\n\r\n    case 'SET_QUESTIONS':\r\n      return {\r\n        ...state,\r\n        questions: action.questions,\r\n      }\r\n\r\n    case 'SET_INDEX':\r\n      return {\r\n        ...state,\r\n        index: action.index,\r\n      }\r\n\r\n    case 'SET_SCORE':\r\n      return {\r\n        ...state,\r\n        score: action.score,\r\n      }\r\n\r\n      case 'SET_ANSWERED':\r\n        return {\r\n          ...state,\r\n          isAnswered: action.answered\r\n        }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst store = createStore(Reducer)\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport store from './store/Reducer'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}