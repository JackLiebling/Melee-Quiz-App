[{"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\index.js":"1","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\App.js":"2","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Settings.js":"3","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\FinalScreen.js":"4","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\QuestionButton.js":"5","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\VideoQuestion.tsx":"6","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\store\\Reducer.tsx":"7","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Question.tsx":"8","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\Options.tsx":"9","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\FormModal.tsx":"10","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\VideoBackground.tsx":"11","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\ContactModal.tsx":"12"},{"size":353,"mtime":1664432695200,"results":"13","hashOfConfig":"14"},{"size":1081,"mtime":1667292686870,"results":"15","hashOfConfig":"14"},{"size":2054,"mtime":1666163717465,"results":"16","hashOfConfig":"14"},{"size":908,"mtime":1664945850199,"results":"17","hashOfConfig":"14"},{"size":2425,"mtime":1666072928901,"results":"18","hashOfConfig":"14"},{"size":2519,"mtime":1666155349575,"results":"19","hashOfConfig":"14"},{"size":1769,"mtime":1666078280813,"results":"20","hashOfConfig":"14"},{"size":2333,"mtime":1666067080032,"results":"21","hashOfConfig":"14"},{"size":4219,"mtime":1667287783961,"results":"22","hashOfConfig":"14"},{"size":7130,"mtime":1667286781204,"results":"23","hashOfConfig":"14"},{"size":774,"mtime":1666239075253,"results":"24","hashOfConfig":"14"},{"size":3196,"mtime":1667292396048,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"6bdw44",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\index.js",[],["57","58"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\App.js",[],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Settings.js",["59","60","61","62"],"import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport QuestionButton from './QuestionButton'\r\n\r\nfunction Settings () {\r\n    const questionCategory = useSelector((state) => state.options.question_category)\r\n    const types = useSelector((state) => state.questionTypes)\r\n    const questionType = useSelector((state) => state.options.question_type)\r\n    const questionAmount = useSelector((state) => state.options.amount_of_questions)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    /* Selection Handlers*/\r\n    const handleGameTypeChange = event => {\r\n      dispatch({\r\n        type: 'CHANGE_TYPE',\r\n        value: event.target.value\r\n      })\r\n    }\r\n\r\n    const handleQuestionNumChange = event => {\r\n      dispatch({\r\n        type: 'CHANGE_AMOUNT',\r\n        value: event.target.value\r\n      })\r\n    }\r\n\r\n        return (\r\n            <div className='options'>\r\n              <div>\r\n                <h2>Select Game Type:</h2>\r\n                <select onChange={handleGameTypeChange}>\r\n                {types.map((option, i) => (\r\n                <option key={i} value={option}>\r\n                {option}\r\n                </option>\r\n                ))}\r\n                </select>\r\n              </div>\r\n              {/* <div>\r\n                <h2>Select Difficulty:</h2>\r\n                <select value={questionDifficulty} onChange={handleDifficultyChange}>\r\n                  <option value=\"\" key=\"difficulty-0\">All</option>\r\n                  <option value=\"easy\" key=\"difficulty-1\">Easy</option>\r\n                  <option value=\"medium\" key=\"difficulty-2\">Medium</option>\r\n                  <option value=\"hard\" key=\"difficulty-3\">Hard</option>\r\n                </select>\r\n              </div> */}\r\n                <div>\r\n                <h2>Number of Questions:</h2>\r\n                <input type=\"number\" min=\"0\" onChange={handleQuestionNumChange} />\r\n              </div>\r\n\r\n              <QuestionButton text=\"Show Me Your Moves!\"/>\r\n\r\n            </div>\r\n\r\n          )\r\n\r\n\r\n}\r\n\r\nexport default Settings","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\FinalScreen.js",[],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\QuestionButton.js",["63","64","65","66","67","68","69","70"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport questionArray from '../json/questions.json'\r\n\r\nfunction QuestionButton(props) {\r\n  /* State Declarations */\r\n  const questionCategory = useSelector((state) => state.options.question_category)\r\n  const questionType = useSelector((state) => state.options.question_type)\r\n  const questionAmount = useSelector((state) => state.options.amount_of_questions)\r\n  const questionIndex = useSelector((state) => state.index)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  // const handleQuery = async () => {\r\n  //   let apiUrl = `https://opentdb.com/api.php?amount=${questionAmount}`\r\n\r\n    \r\n\r\n  //   if (questionType.length) {\r\n  //     apiUrl = apiUrl.concat(`&type=${questionType}`)\r\n  //   }\r\n\r\n  //   await fetch(apiUrl)\r\n  //     .then((res) => res.json())\r\n  //     .then((response) => {\r\n  //       setQuestions(response.results)\r\n  //     })\r\n\r\n  //   if (questionIndex > 0) {\r\n  //     dispatch({\r\n  //       type: 'SET_INDEX',\r\n  //       index: 0,\r\n  //     })\r\n\r\n  //     dispatch({\r\n  //       type: 'SET_SCORE',\r\n  //       score: 0,\r\n  //     })\r\n  //   }\r\n  // }\r\n\r\n\r\nconst populateQuestions = () => {\r\n  /* Reset score/questions from previous game */\r\n  if (questionIndex > 0) {\r\n        dispatch({\r\n          type: 'SET_INDEX',\r\n          index: 0,\r\n        })\r\n  \r\n        dispatch({\r\n          type: 'SET_SCORE',\r\n          score: 0,\r\n        })\r\n}\r\n\r\n/* parse questions from JSON into new object array, validate input for category, type, etc. */\r\nlet questionSet = Object.values(questionArray).filter((val, i)=> {\r\n  if (questionType == \"All\" && questionCategory == \"All\") {return true}\r\n  else if (questionType == \"All\") {return val.category == questionCategory}\r\n  else if (questionCategory == \"All\") {return val.type == questionType}\r\n  else {return val.type == questionType && val.category == questionCategory}\r\n}\r\n);\r\n\r\n/* Randomize Question Array */\r\nlet shuffled = questionSet\r\n    .map(value => ({ value, sort: Math.random() }))\r\n    .sort((a, b) => a.sort - b.sort)\r\n    .map(({ value }) => value)\r\n\r\n/* Filter Randomized Selection by Number of Questions Selected */\r\nquestionSet = shuffled.filter((val, i)=> i <= questionAmount - 1)\r\n\r\ndispatch ({\r\n  type: 'SET_QUESTIONS', \r\n  questions: questionSet\r\n})\r\n\r\n\r\n}\r\n\r\n  return <button onClick={populateQuestions}>{props.text}</button>\r\n}\r\nexport default QuestionButton\r\n","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\VideoQuestion.tsx",["71","72","73","74"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport YouTube, {YouTubePlayer} from 'react-youtube'\r\n\r\nlet videoElement: YouTubePlayer = null\r\n\r\nexport default function App() {\r\n  const questions = useSelector((state: any) => state.questions)\r\n  const questionIndex = useSelector((state: any) => state.index)\r\n  const isAnswered = useSelector((state: any) => state.isAnswered)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const question = questions[questionIndex]\r\n  const video_id = question.youtube_id\r\n  const stopTime = question.stop\r\n\r\n\r\n    const params = {\r\n    playerVars: {\r\n      autoplay: 0,\r\n      modestbranding: 1,\r\n      controls: 0, \r\n      disablekb: 1\r\n    },\r\n  }\r\n\r\n  /* Advance to Next Question Upon Video Completion */\r\n\r\n  const checkState = () => {\r\n    let playerState: number = videoElement.target.playerInfo.playerState\r\n    if (playerState === 0) {\r\n      dispatch({\r\n        type: 'SET_ANSWERED',\r\n        answered: false,\r\n      })\r\n\r\n      dispatch({\r\n        type: 'SET_INDEX',\r\n        index: questionIndex + 1,\r\n      })\r\n    }\r\n  }\r\n\r\n  const questionInterval = () => {\r\n    const interval = setInterval(async () => {\r\n      let stopTime2 = question.stop\r\n      if (videoElement && videoElement.target.getCurrentTime() > 0) {\r\n        const elapsed_seconds = videoElement.target.getCurrentTime();\r\n        let done = false\r\n\r\n        if (elapsed_seconds >= (stopTime + 0.2))\r\n        {\r\n          if (videoElement.target.playerInfo.playerState === 2) {videoElement.target.playVideo()}\r\n          done = true\r\n        }\r\n\r\n        /* Stop Video if Midpoint is reached */\r\n        if (elapsed_seconds >= stopTime && !done)\r\n        {\r\n          videoElement.target.seekTo(stopTime)\r\n          videoElement.target.pauseVideo()\r\n        }\r\n        done ? clearInterval(interval) : console.log(\"not done\")\r\n\r\n      }\r\n    }, 200); }\r\n\r\n  //get current time and video status in real time\r\n  useEffect(() => {\r\n\r\n    // return () => {\r\n    //   clearInterval(interval);\r\n    // };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isAnswered == true) {\r\n    videoElement.target.seekTo(stopTime + 0.5)\r\n    videoElement.target.playVideo()\r\n    }\r\n  }, [isAnswered]);\r\n\r\n  const _onReady = (event: YouTubePlayer) => {\r\n    videoElement = event;\r\n    questionInterval()\r\n  };\r\n\r\n  return (\r\n    <div className=\"video-question\">\r\n      <YouTube videoId={video_id} opts={params} onReady={_onReady} onStateChange={checkState}/>\r\n    </div>\r\n  )\r\n}",["75","76"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\store\\Reducer.tsx",[],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Question.tsx",["77","78","79","80","81"],"import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport VideoQuestion from './VideoQuestion'\r\n\r\nfunction Question() {\r\n  const [selectedAnswer, setSelectedAnswer] = useState(null)\r\n\r\n  const score = useSelector((state: any) => state.score)\r\n  const questions = useSelector((state: any) => state.questions)\r\n  const questionIndex = useSelector((state: any) => state.index)\r\n  const answerSelected = useSelector((state: any) => state.isAnswered)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const question = questions[questionIndex]\r\n  const options = question.answers\r\n  const answer = question.correct_answer\r\n  const incorrect_answers = question.answers.filter((val: object) => val != answer)\r\n\r\n  const handleListItemClick = (event: any) => {\r\n    dispatch({\r\n      type: 'SET_ANSWERED',\r\n      answered: true,\r\n    })\r\n    setSelectedAnswer(event.target.textContent)\r\n\r\n    if (event.target.textContent === answer) {\r\n      dispatch({\r\n        type: 'SET_SCORE',\r\n        score: score + 1,\r\n      })\r\n    }\r\n\r\n    if (question.type != \"Guess That Player\" && questionIndex + 1 <= questions.length) {\r\n      setTimeout(() => {\r\n        dispatch({\r\n          type: 'SET_ANSWERED',\r\n          answered: false,\r\n        })\r\n        setSelectedAnswer(null)\r\n\r\n        dispatch({\r\n          type: 'SET_INDEX',\r\n          index: questionIndex + 1,\r\n        })\r\n      }, 3000)\r\n    }\r\n  }\r\n\r\n  const getClass = (option: string) => {\r\n    if (!answerSelected) {\r\n      return ``;\r\n    }\r\n\r\n\r\n    if (answerSelected) {\r\n    if (option === answer) {\r\n      return `correct off`\r\n    }\r\n\r\n    if (option === selectedAnswer) {\r\n      return `selected off`\r\n    }\r\n\r\n    else {return 'off'}\r\n\r\n  }\r\n\r\n  }\r\n\r\n  if (!question) {\r\n    return <div>Loading</div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h3>Question {questionIndex + 1}</h3>\r\n      <h3>{question.question}</h3>\r\n      {question.type==\"Guess That Player\" ? <VideoQuestion/> : ''}\r\n      <ul className=\"answers\">\r\n        {options.map((option: string, i: number) => (\r\n          <li key={i} onClick={handleListItemClick} className={getClass(option)}>\r\n            {option}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        Score: {score} / {questions.length}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Question\r\n","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\Options.tsx",["82","83"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\FormModal.tsx",["84","85","86","87","88","89","90","91","92","93"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\VideoBackground.tsx",["94","95"],"import React, { useState, useEffect } from 'react'\r\nimport YouTube, {YouTubePlayer} from 'react-youtube'\r\n\r\nconst VideoBackground = () => {\r\nlet videoElement: YouTubePlayer = null\r\nconst video_id = \"06tTwaaxbRc\"\r\n\r\nconst params = {\r\n    playerVars: {\r\n      autoplay: 1,\r\n      modestbranding: 1,\r\n      controls: 0, \r\n      disablekb: 1,\r\n      showinfo: 0,\r\n      autohide: 1,\r\n      mute: 1, \r\n      loop: 1,\r\n      playlist: video_id\r\n    },\r\n  }\r\n\r\nconst _onReady = (event: YouTubePlayer) => {\r\n    videoElement = event\r\n    console.log(event.target)\r\n    videoElement.target.playVideo()\r\n}\r\n\r\nreturn (\r\n    <div className=\"vid-container off\">\r\n      <YouTube videoId={video_id} opts={params} onReady={_onReady}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default VideoBackground","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\ContactModal.tsx",["96","97","98","99","100","101","102","103","104","105","106","107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":16,"nodeType":"115","messageId":"116","endLine":1,"endColumn":24},{"ruleId":"113","severity":1,"message":"117","line":6,"column":11,"nodeType":"115","messageId":"116","endLine":6,"endColumn":27},{"ruleId":"113","severity":1,"message":"118","line":8,"column":11,"nodeType":"115","messageId":"116","endLine":8,"endColumn":23},{"ruleId":"113","severity":1,"message":"119","line":9,"column":11,"nodeType":"115","messageId":"116","endLine":9,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":60,"column":20,"nodeType":"122","messageId":"123","endLine":60,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":60,"column":49,"nodeType":"122","messageId":"123","endLine":60,"endColumn":51},{"ruleId":"120","severity":1,"message":"121","line":61,"column":25,"nodeType":"122","messageId":"123","endLine":61,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":61,"column":56,"nodeType":"122","messageId":"123","endLine":61,"endColumn":58},{"ruleId":"120","severity":1,"message":"121","line":62,"column":29,"nodeType":"122","messageId":"123","endLine":62,"endColumn":31},{"ruleId":"120","severity":1,"message":"121","line":62,"column":56,"nodeType":"122","messageId":"123","endLine":62,"endColumn":58},{"ruleId":"120","severity":1,"message":"121","line":63,"column":25,"nodeType":"122","messageId":"123","endLine":63,"endColumn":27},{"ruleId":"120","severity":1,"message":"121","line":63,"column":57,"nodeType":"122","messageId":"123","endLine":63,"endColumn":59},{"ruleId":"124","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":47,"column":11,"nodeType":"115","messageId":"116","endLine":47,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":78,"column":20,"nodeType":"122","messageId":"123","endLine":78,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":82,"column":6,"nodeType":"128","endLine":82,"endColumn":18,"suggestions":"129"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"124","severity":1,"message":"130","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"131","line":18,"column":9,"nodeType":"115","messageId":"116","endLine":18,"endColumn":26},{"ruleId":"120","severity":1,"message":"132","line":18,"column":74,"nodeType":"122","messageId":"123","endLine":18,"endColumn":76},{"ruleId":"120","severity":1,"message":"132","line":34,"column":23,"nodeType":"122","messageId":"123","endLine":34,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":79,"column":21,"nodeType":"122","messageId":"123","endLine":79,"endColumn":23},{"ruleId":"124","severity":1,"message":"130","line":1,"column":26,"nodeType":"115","messageId":"116","endLine":1,"endColumn":35},{"ruleId":"124","severity":1,"message":"133","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":15},{"ruleId":"124","severity":1,"message":"134","line":1,"column":37,"nodeType":"115","messageId":"116","endLine":1,"endColumn":43},{"ruleId":"124","severity":1,"message":"135","line":2,"column":23,"nodeType":"115","messageId":"116","endLine":2,"endColumn":34},{"ruleId":"124","severity":1,"message":"136","line":20,"column":9,"nodeType":"115","messageId":"116","endLine":20,"endColumn":19},{"ruleId":"124","severity":1,"message":"137","line":33,"column":9,"nodeType":"115","messageId":"116","endLine":33,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":53,"column":24,"nodeType":"122","messageId":"123","endLine":53,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":70,"column":15,"nodeType":"122","messageId":"123","endLine":70,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":119,"column":33,"nodeType":"122","messageId":"123","endLine":119,"endColumn":35},{"ruleId":"120","severity":1,"message":"121","line":137,"column":24,"nodeType":"122","messageId":"123","endLine":137,"endColumn":26},{"ruleId":"120","severity":1,"message":"132","line":159,"column":56,"nodeType":"122","messageId":"123","endLine":159,"endColumn":58},{"ruleId":"120","severity":1,"message":"121","line":195,"column":26,"nodeType":"122","messageId":"123","endLine":195,"endColumn":28},{"ruleId":"124","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"130","line":1,"column":27,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"134","line":1,"column":37,"nodeType":"115","messageId":"116","endLine":1,"endColumn":43},{"ruleId":"124","severity":1,"message":"138","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":21},{"ruleId":"124","severity":1,"message":"135","line":2,"column":23,"nodeType":"115","messageId":"116","endLine":2,"endColumn":34},{"ruleId":"124","severity":1,"message":"139","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":21},{"ruleId":"124","severity":1,"message":"140","line":12,"column":8,"nodeType":"115","messageId":"116","endLine":12,"endColumn":16},{"ruleId":"124","severity":1,"message":"137","line":22,"column":9,"nodeType":"115","messageId":"116","endLine":22,"endColumn":17},{"ruleId":"141","severity":1,"message":"142","line":47,"column":159,"nodeType":"143","endLine":47,"endColumn":206},{"ruleId":"141","severity":1,"message":"142","line":48,"column":17,"nodeType":"143","endLine":48,"endColumn":60},{"ruleId":"141","severity":1,"message":"142","line":48,"column":145,"nodeType":"143","endLine":48,"endColumn":205},{"ruleId":"141","severity":1,"message":"142","line":61,"column":13,"nodeType":"143","endLine":61,"endColumn":63},{"ruleId":"141","severity":1,"message":"142","line":62,"column":13,"nodeType":"143","endLine":62,"endColumn":65},{"ruleId":"141","severity":1,"message":"142","line":63,"column":13,"nodeType":"143","endLine":63,"endColumn":73},{"ruleId":"141","severity":1,"message":"142","line":64,"column":13,"nodeType":"143","endLine":64,"endColumn":90},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'questionCategory' is assigned a value but never used.","'questionType' is assigned a value but never used.","'questionAmount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'stopTime2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stopTime'. Either include it or remove the dependency array.","ArrayExpression",["146"],"'useEffect' is defined but never used.","'incorrect_answers' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Divider' is defined but never used.","'useRef' is defined but never used.","'useDispatch' is defined but never used.","'categories' is assigned a value but never used.","'FormOpen' is assigned a value but never used.","'useSelector' is defined but never used.","'DialogActions' is defined but never used.","'MenuItem' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},"Update the dependencies array to be: [isAnswered, stopTime]",{"range":"149","text":"150"},[2229,2241],"[isAnswered, stopTime]"]