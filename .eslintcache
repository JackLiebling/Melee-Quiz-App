[{"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\index.js":"1","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\App.js":"2","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Settings.js":"3","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\FinalScreen.js":"4","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\QuestionButton.js":"5","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\VideoQuestion.tsx":"6","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\store\\Reducer.tsx":"7","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Question.tsx":"8","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\Options.tsx":"9","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\FormModal.tsx":"10"},{"size":353,"mtime":1664432695200,"results":"11","hashOfConfig":"12"},{"size":1172,"mtime":1664688603657,"results":"13","hashOfConfig":"12"},{"size":2016,"mtime":1666072871328,"results":"14","hashOfConfig":"12"},{"size":908,"mtime":1664945850199,"results":"15","hashOfConfig":"12"},{"size":2425,"mtime":1666072928901,"results":"16","hashOfConfig":"12"},{"size":2522,"mtime":1666072821405,"results":"17","hashOfConfig":"12"},{"size":1781,"mtime":1666068905017,"results":"18","hashOfConfig":"12"},{"size":2333,"mtime":1666067080032,"results":"19","hashOfConfig":"12"},{"size":3632,"mtime":1664945918759,"results":"20","hashOfConfig":"12"},{"size":5358,"mtime":1665732818756,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"6bdw44",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\index.js",[],["47","48"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\App.js",["49"],"import { useSelector } from 'react-redux'\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\n\r\nimport Settings from './Components/Settings'\r\nimport Question from './Components/Question'\r\nimport FinalScreen from './Components/FinalScreen'\r\nimport OptionsMenu from './Components/Menu/Options'\r\n\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const darkTheme = createTheme({ palette: { mode: 'dark', }, });\r\n  const questions = useSelector((state) => state.questions)\r\n  const questionIndex = useSelector((state) => state.index)\r\n\r\n  let component\r\n\r\n  if (questions.length && questionIndex + 1 <= questions.length) {\r\n    component = <Question />\r\n  } else if (!questions.length) {\r\n    component = <Settings />\r\n  } else {\r\n    component = <FinalScreen />\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={darkTheme}>\r\n    <div className=\"vid-container\">\r\n    <iframe src=\"https://www.youtube.com/embed/06tTwaaxbRc?controls=0&autoplay=1&mute=1&playlist=06tTwaaxbRc&loop=1\"></iframe>\r\n    </div>\r\n    <OptionsMenu/>\r\n    <div className=\"App\">\r\n      <div className=\"app-container\">{component}</div>\r\n    </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Settings.js",["50","51","52","53"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\FinalScreen.js",[],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\QuestionButton.js",["54","55","56","57","58","59","60","61"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\VideoQuestion.tsx",["62","63","64","65"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\store\\Reducer.tsx",[],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Question.tsx",["66","67","68","69","70"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\Options.tsx",["71","72","73"],"import React, {useState, useEffect} from 'react';\r\nimport { useDispatch } from 'react-redux'\r\nimport { styled, alpha } from '@mui/material/styles';\r\nimport Button from '@mui/material/Button';\r\nimport Menu, { MenuProps } from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Divider from '@mui/material/Divider';\r\nimport ScoreboardIcon from '@mui/icons-material/Scoreboard';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport FormModal from './FormModal';\r\n\r\n/* Options Menu */\r\nconst StyledMenu = styled((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'right',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'right',\r\n    }}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  '& .MuiPaper-root': {\r\n    borderRadius: 6,\r\n    marginTop: theme.spacing(1),\r\n    minWidth: 180,\r\n    color:\r\n      theme.palette.mode === 'light' ? 'rgb(55, 65, 81)' : theme.palette.grey[300],\r\n    boxShadow:\r\n      'rgb(255, 255, 255) 0px 0px 0px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px, rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px',\r\n    '& .MuiMenu-list': {\r\n      padding: '4px 0',\r\n    },\r\n    '& .MuiMenuItem-root': {\r\n      '& .MuiSvgIcon-root': {\r\n        fontSize: 18,\r\n        color: theme.palette.text.secondary,\r\n        marginRight: theme.spacing(1.5),\r\n      },\r\n      '&:active': {\r\n        backgroundColor: alpha(\r\n          theme.palette.primary.main,\r\n          theme.palette.action.selectedOpacity,\r\n        ),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function OptionsMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [opened, setOpened] = useState(false)\r\n  const open = Boolean(anchorEl);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = (e: { target: any; }) => {\r\n    setAnchorEl(null);\r\n    e.target.innerText == \"Suggestions\" ? setOpened(true) : setOpened(false)\r\n  };\r\n\r\n  const reset = () =>\r\n  {\r\n    dispatch({\r\n        type: 'SET_QUESTIONS',\r\n        questions: [],\r\n      })\r\n\r\n      dispatch({\r\n        type: 'SET_INDEX',\r\n        index: 0,\r\n      })\r\n  \r\n      dispatch({\r\n        type: 'SET_SCORE',\r\n        score: 0,\r\n      })\r\n  }\r\n\r\n  return (\r\n    <div className=\"options-button\">\r\n      <Button\r\n        id=\"options-button\"\r\n        aria-controls={open ? 'demo-customized-menu' : undefined}\r\n        aria-haspopup=\"true\"\r\n        aria-expanded={open ? 'true' : undefined}\r\n        variant=\"contained\"\r\n        disableElevation\r\n        onClick={handleClick}\r\n        endIcon={<KeyboardArrowDownIcon />}\r\n      >\r\n        Options\r\n      </Button>\r\n      <StyledMenu\r\n        id=\"demo-customized-menu\"\r\n        MenuListProps={{\r\n          'aria-labelledby': 'demo-customized-button',\r\n        }}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={reset} disableRipple>\r\n          <HomeIcon />\r\n          Home/Reset\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose} disableRipple>\r\n          <ScoreboardIcon />\r\n          Scores\r\n        </MenuItem>\r\n        <MenuItem onClick={handleClose} disableRipple>\r\n          <EditIcon />\r\n          Suggestions\r\n        </MenuItem>\r\n      </StyledMenu>\r\n      <FormModal setOpened={setOpened} open={opened}/>\r\n    </div>\r\n  );\r\n}\r\n",["74","75"],"C:\\Users\\Tristan\\Documents\\Projects\\React\\Melee-Quiz-App\\src\\Components\\Menu\\FormModal.tsx",["76","77","78","79"],"import React, {useState, useEffect} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Button from '@mui/material/Button'\r\nimport TextField from '@mui/material/TextField'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogContentText from '@mui/material/DialogContentText'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport MenuItem from '@mui/material/MenuItem'\r\n\r\nexport default function FormModal(props: any) {\r\n  // interface FormDataType {type:string, category: string, difficulty: string, question:string, correct_answer: string, answer2: string, answer3: string, answer4: string}\r\n\r\n  const types = useSelector((state: any) => state.questionTypes)\r\n  const categories = useSelector((state: any) => state.questionCategories)\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n  // let formData = {type:\"\", category: \"\", difficulty: \"\", question: \"\", correct_answer: \"\", answer2: \"\", answer3: \"\", answer4: \"\"}\r\n  let formData: any = {type: \"Multiple Choice\", category: \"\", difficulty: \"\"}\r\n  const [responseBody, setResponseBody] = useState(formData)\r\n\r\n  /* Form Handlers */\r\n\r\n  const FormOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const FormClose = () => {\r\n    setOpen(false)\r\n    props.setOpened(false)\r\n  };\r\n\r\n  const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    let {name, value} = event.target\r\n    formData = {...formData, [name]: value}\r\n  }\r\n  const submitHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n      // FormClose()\r\n      let answersArr: string[] = []\r\n      for (let i in formData) {\r\n        i == \"correct_answer\" ? answersArr.push(formData[i]) : console.log(\"continue\")\r\n        if (i.match(/^answer/)) {\r\n          answersArr.push(formData[i])\r\n          delete formData[i]\r\n        }\r\n      }\r\n      formData = {...formData, answers: answersArr}\r\n      console.log(formData)\r\n      setResponseBody({...formData})\r\n\r\n      fetch('https://m2ic13md4d.execute-api.us-east-2.amazonaws.com/Prod/submitForm', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n      })\r\n      .then( res => {\r\n        console.log(res)\r\n        if (res.ok) {\r\n          // const response = await res.json()\r\n          FormClose()\r\n        }\r\n      })\r\n      .then(data =>{\r\n        console.log(data)\r\n      })\r\n      .catch(error => {\r\n\r\n      })\r\n\r\n      console.log(responseBody)\r\n \r\n  }\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open)\r\n  },[props.open]);\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={FormClose}>\r\n        <DialogTitle>Suggestions\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Much like the melee community itself, this site depends upon the contributions of fans to provide challenging questions and keep things interesting.\r\n             Please submit any questions you can think of and they will be approved and added to the game!\r\n          </DialogContentText>\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n          required\r\n          id=\"questionType\"\r\n          name=\"type\"\r\n          select\r\n          label=\"Select Type\"\r\n          value={types[0]}\r\n          helperText=\"Please select question type\"\r\n        >\r\n          {types.map((option: string, i: number) => (\r\n            <MenuItem key={i} value={option}>\r\n              {option}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n        <TextField onChange={(e)=>inputChangeHandler(e)}\r\n          required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"question\"\r\n            name=\"question\"\r\n            label=\"Question\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"correctAnswer\"\r\n            name=\"correct_answer\"\r\n            label=\"Correct Answer\"\r\n            type=\"email\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"answer2\"\r\n            name=\"answer2\"\r\n            label=\"Answer 2\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"answer3\"\r\n            name=\"answer3\"\r\n            label=\"Answer 3\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n          <TextField onChange={(e)=>inputChangeHandler(e)}\r\n            required\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"answer4\"\r\n            name=\"answer4\"\r\n            label=\"Answer 4\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={submitHandler}>Submit</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":29,"column":5,"nodeType":"86","endLine":29,"endColumn":118},{"ruleId":"87","severity":1,"message":"88","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":24},{"ruleId":"87","severity":1,"message":"91","line":6,"column":11,"nodeType":"89","messageId":"90","endLine":6,"endColumn":27},{"ruleId":"87","severity":1,"message":"92","line":7,"column":11,"nodeType":"89","messageId":"90","endLine":7,"endColumn":23},{"ruleId":"87","severity":1,"message":"93","line":8,"column":11,"nodeType":"89","messageId":"90","endLine":8,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":60,"column":20,"nodeType":"96","messageId":"97","endLine":60,"endColumn":22},{"ruleId":"94","severity":1,"message":"95","line":60,"column":49,"nodeType":"96","messageId":"97","endLine":60,"endColumn":51},{"ruleId":"94","severity":1,"message":"95","line":61,"column":25,"nodeType":"96","messageId":"97","endLine":61,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":61,"column":56,"nodeType":"96","messageId":"97","endLine":61,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":62,"column":29,"nodeType":"96","messageId":"97","endLine":62,"endColumn":31},{"ruleId":"94","severity":1,"message":"95","line":62,"column":56,"nodeType":"96","messageId":"97","endLine":62,"endColumn":58},{"ruleId":"94","severity":1,"message":"95","line":63,"column":25,"nodeType":"96","messageId":"97","endLine":63,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":63,"column":57,"nodeType":"96","messageId":"97","endLine":63,"endColumn":59},{"ruleId":"98","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"98","severity":1,"message":"99","line":47,"column":11,"nodeType":"89","messageId":"90","endLine":47,"endColumn":20},{"ruleId":"94","severity":1,"message":"95","line":78,"column":20,"nodeType":"96","messageId":"97","endLine":78,"endColumn":22},{"ruleId":"100","severity":1,"message":"101","line":82,"column":6,"nodeType":"102","endLine":82,"endColumn":18,"suggestions":"103"},{"ruleId":"98","severity":1,"message":"104","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"105","line":18,"column":9,"nodeType":"89","messageId":"90","endLine":18,"endColumn":26},{"ruleId":"94","severity":1,"message":"106","line":18,"column":74,"nodeType":"96","messageId":"97","endLine":18,"endColumn":76},{"ruleId":"94","severity":1,"message":"106","line":34,"column":23,"nodeType":"96","messageId":"97","endLine":34,"endColumn":25},{"ruleId":"94","severity":1,"message":"95","line":79,"column":21,"nodeType":"96","messageId":"97","endLine":79,"endColumn":23},{"ruleId":"98","severity":1,"message":"104","line":1,"column":26,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},{"ruleId":"98","severity":1,"message":"107","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":68,"column":24,"nodeType":"96","messageId":"97","endLine":68,"endColumn":26},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"98","severity":1,"message":"108","line":2,"column":23,"nodeType":"89","messageId":"90","endLine":2,"endColumn":34},{"ruleId":"98","severity":1,"message":"109","line":16,"column":9,"nodeType":"89","messageId":"90","endLine":16,"endColumn":19},{"ruleId":"98","severity":1,"message":"110","line":25,"column":9,"nodeType":"89","messageId":"90","endLine":25,"endColumn":17},{"ruleId":"94","severity":1,"message":"95","line":42,"column":11,"nodeType":"96","messageId":"97","endLine":42,"endColumn":13},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'questionCategory' is assigned a value but never used.","'questionType' is assigned a value but never used.","'questionAmount' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","@typescript-eslint/no-unused-vars","'stopTime2' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stopTime'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'useEffect' is defined but never used.","'incorrect_answers' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Divider' is defined but never used.","'useDispatch' is defined but never used.","'categories' is assigned a value but never used.","'FormOpen' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},"Update the dependencies array to be: [isAnswered, stopTime]",{"range":"116","text":"117"},[2231,2243],"[isAnswered, stopTime]"]